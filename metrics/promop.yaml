---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: monitoring
  namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: monitoring
  namespace: monitoring
rules:
- apiGroups: [""]
  resources:
  - namespaces
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  - configmaps
  verbs: ["get", "list", "watch"]
- apiGroups: ["authorization.k8s.io"]
  resources: ["subjectaccessreviews"]
  verbs: ["create"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: monitoring
subjects:
  - kind: ServiceAccount
    name: monitoring
    namespace: monitoring
roleRef:
  kind: ClusterRole
  name: monitoring
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: adapter-config
  namespace: monitoring
data:
  config.yaml: |
    rules:
    - seriesQuery: 'nginx_http_requests_total'
      resources:
        overrides:
          kubernetes_namespace:
            resource: namespace
          kubernetes_pod_name:
            resource: pod
      name:
        matches: "^(.*)_total"
        as: "nginx_http_requests_total"
      metricsQuery: (sum(rate(<<.Series>>{<<.LabelMatchers>>}[1m])) by (<<.GroupBy>>))
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: custom-metrics-apiserver
  name: custom-metrics-apiserver
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: custom-metrics-apiserver
  template:
    metadata:
      labels:
        app: custom-metrics-apiserver
      name: custom-metrics-apiserver
    spec:
      serviceAccountName: monitoring
      containers:
      - name: custom-metrics-apiserver
        image: quay.io/coreos/k8s-prometheus-adapter-amd64:v0.8.4
        args:
        - /adapter
        - --secure-port=6443
        - --tls-cert-file=/var/run/serving-cert/serving.crt
        - --tls-private-key-file=/var/run/serving-cert/serving.key
        - --logtostderr=true
        - --prometheus-url=http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090/
        - --metrics-relist-interval=30s
        - --v=10
        - --config=/etc/adapter/config.yaml
        ports:
        - containerPort: 6443
        volumeMounts:
        - mountPath: /var/run/serving-cert
          name: volume-serving-cert
          readOnly: true
        - mountPath: /etc/adapter/
          name: config
          readOnly: true
      volumes:
      - name: volume-serving-cert
        secret:
          secretName: cm-adapter-serving-certs
      - name: config
        configMap:
          name: adapter-config
---
apiVersion: v1
kind: Service
metadata:
  name: custom-metrics-apiserver
  namespace: monitoring
spec:
  ports:
  - port: 443
    targetPort: 6443
  selector:
    app: custom-metrics-apiserver
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1.custom.metrics.k8s.io
spec:
  service:
    name: custom-metrics-apiserver
    namespace: monitoring
    port: 443
  group: custom.metrics.k8s.io
  version: v1
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMrekNDQWVPZ0F3SUJBZ0lVWEVxZWFHWTYzZG1OUG5wcTNtM29Ra0lqb1Uwd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0RURUxNQWtHQTFVRUF3d0NZMkV3SGhjTk1qUXhNakkxTWpJd01ETTRXaGNOTWpVeE1qSTFNakl3TURNNApXakFOTVFzd0NRWURWUVFEREFKallUQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCCkFNY1hySzlhcDNPRklRN0ZNNnNpZHBLUTVMNnQ2RC82U3JQcHZWbzJPWCtuL1ZLajZjTWp1UGltM0UvRDdmWUsKckM5OXREdkVtdDF3eXdRMUQ3ZDNZRjlSMDJiVzZQYWh2ZXZUUENXUnI2VXY0MFhqMnVrNEZtYmlQeFRLMk9MQgpLNVdRbExTWW5leVlWT1RtR010bFNweGFSSXRBK0FJL3FmL1UzWjZDaFNwTkEybHZYSmNIallaeXBuT2ZkYUxJClBOZjRxcVducDZQZkJGbWg0MVBweWF0VTY2bGJRM0N6Ylk4TlJvbWE0OXpUUDhwQXkrc0kyUGlWZVB6akxtMHcKaFVhcjJMWHZWV290aldIUm5CUCtqR2RhQys5eWdNVitKVXN6RmU1SldwUk54dC9hVktMeTB2dW0rbnpyNFJWawozQytkYkZKcmNQMXB5UU92MVlJbFp2a0NBd0VBQWFOVE1GRXdIUVlEVlIwT0JCWUVGQmxlNGE5cFFOd1pDM0pKCnVwZFp4RjRmbzVjS01COEdBMVVkSXdRWU1CYUFGQmxlNGE5cFFOd1pDM0pKdXBkWnhGNGZvNWNLTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFKemhZNU9WZy9KVzNXMlJ3RVVlWTAwdwpHR1pCVGozM3BGeFNQclowOEovYUo2dE5rc1lPNEpCYjZ5N1U4eG1oZms2OHREVXFQZmlPUDZiSUR6TUtud1p4Cm5OdEN0QldnZ1hZRUFyWkNsWjR5UVJhRFpQSnd2ZXl6NkRYRUd6L0ZWdmhDV1J2SjhNS0VwWm9lZ1I1UzlJRXEKVVd2VG13Tno0bDkrNDNHSHA0NlVBdXhMbm9USmpTMUJGZVdZZk5TVUx1M0IvV05UTFVoRUFLOXlERlA2bERHUgpGLzArQUR0ZTdkZWZ2RXZkbWhmbEVJbFdIMEVNc1lYR0JsL01JRFd4YkhHYzF4eEhveVk3NnJTazVvSGNGakRnCkNQVVNiZmthY0NEeFdBUmtEcmZycFhIb3U4dGFVQlJhQmhkaXQ0bUwyUlc2U1JpU0J0Y3VZdkRTVTEyQXBQcz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  groupPriorityMinimum: 100
  versionPriority: 100